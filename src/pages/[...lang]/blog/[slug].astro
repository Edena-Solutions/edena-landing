---
import { getEntry, getCollection } from 'astro:content';
import Layout from '@/layouts/main.astro';
import { translations } from '@/i18n/index.ts';
import { ChevronLeft } from 'lucide-react';
import TableOfContents from '@/components/TableOfContents';

export async function getStaticPaths() {
  const posts = await getCollection('blog');
  const langs = ['es', 'en'];
  return posts.flatMap(post =>
    langs.map(lang => ({
      params: { lang, slug: post.slug },
      props: { lang, slug: post.slug }
    }))
  );
}

const { lang, slug } = Astro.props;
const t = translations[lang as keyof typeof translations];
const post = await getEntry('blog', slug);
if (!post) throw new Error('Post not found');
const { Content } = await post.render();
---

<Layout content={{ title: post.data.title, description: post.data.description }} lang={lang}>
  <div class="max-w-7xl mx-auto py-10 px-4">
    <a href={`/${lang}/blog/`} class="text-sm text-primary hover:underline flex items-center gap-2"><ChevronLeft className="w-4 h-4" /> {t.navigation.blog}</a>
    
    <div class="lg:hidden mb-6">
      <TableOfContents client:load variant="mobile" />
    </div>
    
    <div class="grid grid-cols-1 lg:grid-cols-4 gap-8 mt-8">
      <div class="hidden lg:block lg:col-span-1">
        <TableOfContents client:load variant="sidebar" />
      </div>
      
      <article class="lg:col-span-3">
        <h1 class="text-3xl font-bold mb-2">{post.data.title}</h1>
        <p class="text-muted-foreground text-sm mb-6">{new Date(post.data.date).toLocaleDateString(lang, { year: 'numeric', month: 'long', day: 'numeric' })}</p>
        {post.data.cover && <img src={post.data.cover} alt={post.data.title} class="mb-6 rounded w-full max-h-80 object-cover" />}
        <div class="prose prose-neutral max-w-none">
          <Content />
        </div>
      </article>
    </div>
  </div>
</Layout> 